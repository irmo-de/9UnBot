name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  actions: read

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Determine Last Tag Version
      id: tag_version
      run: |
        if git rev-parse --verify refs/tags > /dev/null 2>&1; then
          TAG_NAME=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Found the last tag in history: $TAG_NAME"
        else
          TAG_NAME="v0.1.0"
          echo "No tags found in history. Using default tag: $TAG_NAME"
        fi
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        echo "Determined tag version: $TAG_NAME"

    - name: Check if Release Exists
      id: check_release
      run: |
        RELEASE_DATA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        "https://api.github.com/repos/irmo-de/9UnBot/releases/tags/$TAG_NAME")
        if echo "$RELEASE_DATA" | grep -q '"id":'; then
          echo "Release already exists."
          RELEASE_EXISTS=true
        else
          echo "No existing release found."
          RELEASE_EXISTS=false
        fi
        echo "RELEASE_EXISTS=$RELEASE_EXISTS" >> $GITHUB_ENV

    - name: Create Release (if not exists)
      id: create_release
      if: env.RELEASE_EXISTS == 'false'
      run: |
        RESPONSE=$(curl -s -o response.txt -w "%{http_code}" \
        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d "{\"tag_name\": \"$TAG_NAME\", \"name\": \"$TAG_NAME\", \"body\": \"Automated release for version $TAG_NAME\", \"draft\": false, \"prerelease\": false}" \
        https://api.github.com/repos/irmo-de/9UnBot/releases)
        
        if [ "$(cat response.txt)" = "201" ]; then
          echo "Release created successfully."
        elif [ "$(cat response.txt)" = "422" ]; then
          echo "Release already exists."
        else
          echo "Unexpected response: $(cat response.txt)"
          exit 1
        fi

    - name: Get Upload URL
      id: get_upload_url
      run: |
        if [ "$RELEASE_EXISTS" = "true" ]; then
          RELEASE_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/irmo-de/9UnBot/releases/tags/$TAG_NAME" | jq -r .upload_url)
        else
          RELEASE_URL=$(jq -r .upload_url response.txt)
        fi
        UPLOAD_URL="${RELEASE_URL%\{*}"
        echo "::set-output name=upload_url::$UPLOAD_URL"

    - name: Upload APK to the Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}?name=app-debug.apk
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: app-debug.apk
        asset_content_type: application/vnd.android.package-archive
